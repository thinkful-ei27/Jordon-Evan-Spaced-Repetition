{"version":3,"sources":["images/temp-app-preview.png","validators.js","config.js","actions/utils.js","local-storage.js","actions/auth.js","components/header-bar.js","components/input.js","components/registration-form.js","actions/users.js","components/registration-page.js","components/landing-page.js","actions/protected-data.js","components/dashboard.js","components/requires-login.js","components/login-form.js","components/app.js","reducers/auth.js","reducers/protected-data.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","length","field","API_BASE_URL","process","REACT_APP_API_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","clearAuthToken","localStorage","removeItem","e","SET_AUTH_TOKEN","setAuthToken","authToken","type","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","error","storeAuthInfo","dispatch","currentUser","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","SubmissionError","_error","refreshAuthToken","getState","auth","Authorization","_ref2","HeaderBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","logOutButton","_this","loggedIn","react_default","a","createElement","onClick","logOut","className","React","Component","connect","state","Input","prevProps","meta","active","input","focus","warning","touched","htmlFor","name","label","assign","id","ref","required","undefined","nonEmpty","trim","isTrimmed","passwordLength","min","max","matchesPassword","allValues","RegistrationForm","values","firstName","lastName","content-type","reason","location","defineProperty","registerUser","_this2","onSubmit","handleSubmit","Field","component","validate","disabled","pristine","submitting","reduxForm","form","onSubmitFail","errors","keys","react_router","to","registration_form","react_router_dom","alt","src","require","registration_page","FETCH_PROTECTED_DATA_SUCCESS","FETCH_PROTECTED_DATA_ERROR","fetchProtectedData","data","fetchProtectedDataSuccess","Dashboard","protectedData","requiresLogin","RequiresLogin","authenticating","passThroughProps","objectWithoutProperties","displayName","loading","LoginForm","aria-live","App","startPeriodicRefresh","stopPeriodicRefresh","refreshInterval","setInterval","clearInterval","header_bar","exact","path","LandingPage","RegistrationPage","withRouter","hasAuthToken","initialState","store","createStore","combineReducers","formReducer","action","applyMiddleware","thunk","getItem","token","ReactDOM","render","es","app","document","getElementById"],"mappings":"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","file":"static/js/main.4db7464d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/temp-app-preview.4e5cbf06.png\";","export const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n  value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n  value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n  if (length.min && value.length < length.min) {\n    return `Must be at least ${length.min} characters long`;\n  }\n  if (length.max && value.length > length.max) {\n    return `Must be at most ${length.max} characters long`;\n  }\n};\nexport const matches = field => (value, allValues) =>\n  field in allValues && value.trim() === allValues[field].trim()\n    ? undefined\n    : 'Does not match';\n","export const API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\n","// Boilerplate code for handling errors from the API.  If the error response\n// contains JSON then we return a rejected promise containing the decoded\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\n// containing the status text.  If there is no error then we continue with\n// the promise chain.\nexport const normalizeResponseErrors = res => {\n  if (!res.ok) {\n    if (\n      res.headers.has('content-type') &&\n      res.headers.get('content-type').startsWith('application/json')\n    ) {\n      // It's a nice JSON error returned by us, so decode it\n      return res.json().then(err => Promise.reject(err));\n    }\n    // It's a less informative error returned by express\n    return Promise.reject({\n      code: res.status,\n      message: res.statusText\n    });\n  }\n  return res;\n};\n","export const loadAuthToken = () => {\n  return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n  try {\n    localStorage.setItem('authToken', authToken);\n  } catch (e) { }\n};\n\nexport const clearAuthToken = () => {\n  try {\n    localStorage.removeItem('authToken');\n  } catch (e) { }\n};\n","import jwtDecode from 'jwt-decode';\nimport { SubmissionError } from 'redux-form';\n\nimport { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\nimport { saveAuthToken, clearAuthToken } from '../local-storage';\n\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const setAuthToken = authToken => ({\n  type: SET_AUTH_TOKEN,\n  authToken\n});\n\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\nexport const clearAuth = () => ({\n  type: CLEAR_AUTH\n});\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const authRequest = () => ({\n  type: AUTH_REQUEST\n});\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const authSuccess = currentUser => ({\n  type: AUTH_SUCCESS,\n  currentUser\n});\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const authError = error => ({\n  type: AUTH_ERROR,\n  error\n});\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token\nconst storeAuthInfo = (authToken, dispatch) => {\n  const decodedToken = jwtDecode(authToken);\n  dispatch(setAuthToken(authToken));\n  dispatch(authSuccess(decodedToken.user));\n  saveAuthToken(authToken);\n};\n\nexport const login = (username, password) => dispatch => {\n  dispatch(authRequest());\n  return (\n    fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    })\n      // Reject any requests which don't return a 200 status, creating\n      // errors which follow a consistent format\n      .then(res => normalizeResponseErrors(res))\n      .then(res => res.json())\n      .then(({ authToken }) => storeAuthInfo(authToken, dispatch))\n      .catch(err => {\n        const { code } = err;\n        const message =\n          code === 401\n            ? 'Incorrect username or password'\n            : 'Unable to login, please try again';\n        dispatch(authError(err));\n        // Could not authenticate, so return a SubmissionError for Redux\n        // Form\n        return Promise.reject(\n          new SubmissionError({\n            _error: message\n          })\n        );\n      })\n  );\n};\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n  dispatch(authRequest());\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/auth/refresh`, {\n    method: 'POST',\n    headers: {\n      // Provide our existing token as credentials to get a new one\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(({ authToken }) => storeAuthInfo(authToken, dispatch))\n    .catch(err => {\n      // We couldn't get a refresh token because our current credentials\n      // are invalid or expired, or something else went wrong, so clear\n      // them and sign us out\n      dispatch(authError(err));\n      dispatch(clearAuth());\n      clearAuthToken(authToken);\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearAuth } from '../actions/auth';\nimport { clearAuthToken } from '../local-storage';\n\nexport class HeaderBar extends React.Component {\n  logOut() {\n    this.props.dispatch(clearAuth());\n    clearAuthToken();\n  }\n\n  render() {\n    // Only render the log out button if we are logged in\n    let logOutButton;\n    if (this.props.loggedIn) {\n      logOutButton = (\n        <button onClick={() => this.logOut()}>Log out</button>\n      );\n    }\n    return (\n      <div className=\"header-bar\">\n        <h1>Foo App</h1>\n        {logOutButton}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(HeaderBar);\n","import React from 'react';\n\nexport default class Input extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (!prevProps.meta.active && this.props.meta.active) {\n      this.input.focus();\n    }\n  }\n\n  render() {\n    let error;\n    if (this.props.meta.touched && this.props.meta.error) {\n      error = <div className=\"form-error\">{this.props.meta.error}</div>;\n    }\n\n    let warning;\n    if (this.props.meta.touched && this.props.meta.warning) {\n      warning = (\n        <div className=\"form-warning\">{this.props.meta.warning}</div>\n      );\n    }\n\n    return (\n      <div className=\"form-input\">\n        <label htmlFor={this.props.input.name}>\n          {this.props.label}\n          {error}\n          {warning}\n        </label>\n        <input\n          {...this.props.input}\n          id={this.props.input.name}\n          type={this.props.type}\n          ref={input => (this.input = input)}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Field, reduxForm, focus } from 'redux-form';\nimport { registerUser } from '../actions/users';\nimport { login } from '../actions/auth';\nimport Input from './input';\nimport { required, nonEmpty, matches, length, isTrimmed } from '../validators';\nconst passwordLength = length({ min: 10, max: 72 });\nconst matchesPassword = matches('password');\n\nexport class RegistrationForm extends React.Component {\n  onSubmit(values) {\n    const { username, password, firstName, lastName } = values;\n    const user = { username, password, firstName, lastName };\n    return this.props\n      .dispatch(registerUser(user))\n      .then(() => this.props.dispatch(login(username, password)));\n  }\n\n  render() {\n    return (\n      <form\n        className=\"login-form\"\n        onSubmit={this.props.handleSubmit(values =>\n          this.onSubmit(values)\n        )}>\n        <label htmlFor=\"firstName\">First name</label>\n        <Field component={Input} type=\"text\" name=\"firstName\" />\n        <label htmlFor=\"lastName\">Last name</label>\n        <Field component={Input} type=\"text\" name=\"lastName\" />\n        <label htmlFor=\"username\">Username</label>\n        <Field\n          component={Input}\n          type=\"text\"\n          name=\"username\"\n          validate={[required, nonEmpty, isTrimmed]}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"password\"\n          validate={[required, passwordLength, isTrimmed]}\n        />\n        <label htmlFor=\"passwordConfirm\">Confirm password</label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"passwordConfirm\"\n          validate={[required, nonEmpty, matchesPassword]}\n        />\n        <button\n          type=\"submit\"\n          disabled={this.props.pristine || this.props.submitting}>\n          Register\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'registration',\n  onSubmitFail: (errors, dispatch) =>\n    dispatch(focus('registration', Object.keys(errors)[0]))\n})(RegistrationForm);\n","import { SubmissionError } from 'redux-form';\n\nimport { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\n\nexport const registerUser = user => dispatch => {\n  return fetch(`${API_BASE_URL}/users`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .catch(err => {\n      const { reason, message, location } = err;\n      if (reason === 'ValidationError') {\n        // Convert ValidationErrors into SubmissionErrors for Redux Form\n        return Promise.reject(\n          new SubmissionError({\n            [location]: message\n          })\n        );\n      }\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport RegistrationForm from './registration-form';\n\nexport function RegistrationPage(props) {\n  // If we are logged in (which happens automatically when registration\n  // is successful) redirect to the user's dashboard\n  if (props.loggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div className=\"home\">\n      <h2>Register for Foo App</h2>\n      <RegistrationForm />\n      <Link to=\"/\">Login</Link>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(RegistrationPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport RegistrationPage from './registration-page';\n\nexport function LandingPage(props) {\n  // If we are logged in redirect straight to the user's dashboard\n  if (props.loggedIn) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <div className=\"home\">\n      <h2>Welcome to Spanish App</h2>\n      <div className=\"app-preview\">\n        <img alt=\"preivew of this page in action\" src={require('../images/temp-app-preview.png')} />\n      </div>\n      <RegistrationPage />\n      <Link to=\"/login\">Login</Link>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(LandingPage);\n","import { API_BASE_URL } from '../config';\nimport { normalizeResponseErrors } from './utils';\n\nexport const FETCH_PROTECTED_DATA_SUCCESS = 'FETCH_PROTECTED_DATA_SUCCESS';\nexport const fetchProtectedDataSuccess = data => ({\n  type: FETCH_PROTECTED_DATA_SUCCESS,\n  data\n});\n\nexport const FETCH_PROTECTED_DATA_ERROR = 'FETCH_PROTECTED_DATA_ERROR';\nexport const fetchProtectedDataError = error => ({\n  type: FETCH_PROTECTED_DATA_ERROR,\n  error\n});\n\nexport const fetchProtectedData = () => (dispatch, getState) => {\n  const authToken = getState().auth.authToken;\n  return fetch(`${API_BASE_URL}/protected`, {\n    method: 'GET',\n    headers: {\n      // Provide our auth token as credentials\n      Authorization: `Bearer ${authToken}`\n    }\n  })\n    .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(({ data }) => dispatch(fetchProtectedDataSuccess(data)))\n    .catch(err => {\n      dispatch(fetchProtectedDataError(err));\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport requiresLogin from './requires-login';\nimport { fetchProtectedData } from '../actions/protected-data';\n\nexport class Dashboard extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchProtectedData());\n  }\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <div className=\"dashboard-username\">\n          Username: {this.props.username}\n        </div>\n        <div className=\"dashboard-name\">Name: {this.props.name}</div>\n        <div className=\"dashboard-protected-data\">\n          Protected data: {this.props.protectedData}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.auth;\n  return {\n    username: state.auth.currentUser.username,\n    name: `${currentUser.firstName} ${currentUser.lastName}`,\n    protectedData: state.protectedData.data\n  };\n};\n\nexport default requiresLogin()(connect(mapStateToProps)(Dashboard));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nexport default () => Component => {\n  function RequiresLogin(props) {\n    const { authenticating, loggedIn, error, ...passThroughProps } = props;\n    if (authenticating) {\n      return <div>Logging in...</div>;\n    } else if (!loggedIn || error) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return <Component {...passThroughProps} />;\n  }\n\n  const displayName = Component.displayName || Component.name || 'Component';\n  RequiresLogin.displayName = `RequiresLogin(${displayName})`;\n\n  const mapStateToProps = (state, props) => ({\n    authenticating: state.auth.loading,\n    loggedIn: state.auth.currentUser !== null,\n    error: state.auth.error\n  });\n\n  return connect(mapStateToProps)(RequiresLogin);\n};\n","import React from 'react';\nimport { Field, reduxForm, focus } from 'redux-form';\nimport Input from './input';\nimport { login } from '../actions/auth';\nimport { required, nonEmpty } from '../validators';\n\nexport class LoginForm extends React.Component {\n  onSubmit(values) {\n    return this.props.dispatch(login(values.username, values.password));\n  }\n\n  render() {\n    let error;\n    if (this.props.error) {\n      error = (\n        <div className=\"form-error\" aria-live=\"polite\">\n          {this.props.error}\n        </div>\n      );\n    }\n    return (\n      <form\n        className=\"login-form\"\n        onSubmit={this.props.handleSubmit(values =>\n          this.onSubmit(values)\n        )}>\n        {error}\n        <label htmlFor=\"username\">Username</label>\n        <Field\n          component={Input}\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          validate={[required, nonEmpty]}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <Field\n          component={Input}\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          validate={[required, nonEmpty]}\n        />\n        <button disabled={this.props.pristine || this.props.submitting}>\n          Log in\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default reduxForm({\n  form: 'login',\n  onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n})(LoginForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\n\nimport HeaderBar from './header-bar';\nimport LandingPage from './landing-page';\nimport Dashboard from './dashboard';\nimport RegistrationPage from './registration-page';\nimport LoginForm from './login-form';\nimport { refreshAuthToken } from '../actions/auth';\n\nexport class App extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (!prevProps.loggedIn && this.props.loggedIn) {\n      // When we are logged in, refresh the auth token periodically\n      this.startPeriodicRefresh();\n    } else if (prevProps.loggedIn && !this.props.loggedIn) {\n      // Stop refreshing when we log out\n      this.stopPeriodicRefresh();\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopPeriodicRefresh();\n  }\n\n  startPeriodicRefresh() {\n    this.refreshInterval = setInterval(\n      () => this.props.dispatch(refreshAuthToken()),\n      60 * 60 * 1000 // One hour\n    );\n  }\n\n  stopPeriodicRefresh() {\n    if (!this.refreshInterval) {\n      return;\n    }\n\n    clearInterval(this.refreshInterval);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <HeaderBar />\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/register\" component={RegistrationPage} />\n        <Route exact path=\"/login\" component={LoginForm} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  hasAuthToken: state.auth.authToken !== null,\n  loggedIn: state.auth.currentUser !== null\n});\n\n// Deal with update blocking - https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\nexport default withRouter(connect(mapStateToProps)(App));\n","import {\n  SET_AUTH_TOKEN,\n  CLEAR_AUTH,\n  AUTH_REQUEST,\n  AUTH_SUCCESS,\n  AUTH_ERROR\n} from '../actions/auth';\n\nconst initialState = {\n  authToken: null, // authToken !== null does not mean it has been validated\n  currentUser: null,\n  loading: false,\n  error: null\n};\n\nexport default function reducer(state = initialState, action) {\n  if (action.type === SET_AUTH_TOKEN) {\n    return Object.assign({}, state, {\n      authToken: action.authToken\n    });\n  } else if (action.type === CLEAR_AUTH) {\n    return Object.assign({}, state, {\n      authToken: null,\n      currentUser: null\n    });\n  } else if (action.type === AUTH_REQUEST) {\n    return Object.assign({}, state, {\n      loading: true,\n      error: null\n    });\n  } else if (action.type === AUTH_SUCCESS) {\n    return Object.assign({}, state, {\n      loading: false,\n      currentUser: action.currentUser\n    });\n  } else if (action.type === AUTH_ERROR) {\n    return Object.assign({}, state, {\n      loading: false,\n      error: action.error\n    });\n  }\n  return state;\n}\n","import {\n  FETCH_PROTECTED_DATA_SUCCESS,\n  FETCH_PROTECTED_DATA_ERROR\n} from '../actions/protected-data';\n\nconst initialState = {\n  data: '',\n  error: null\n};\n\nexport default function reducer(state = initialState, action) {\n  if (action.type === FETCH_PROTECTED_DATA_SUCCESS) {\n    return Object.assign({}, state, {\n      data: action.data,\n      error: null\n    });\n  } else if (action.type === FETCH_PROTECTED_DATA_ERROR) {\n    return Object.assign({}, state, {\n      error: action.error\n    });\n  }\n  return state;\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport thunk from 'redux-thunk';\nimport { loadAuthToken } from './local-storage';\nimport authReducer from './reducers/auth';\nimport protectedDataReducer from './reducers/protected-data';\nimport { setAuthToken, refreshAuthToken } from './actions/auth';\n\nconst store = createStore(\n  combineReducers({\n    form: formReducer,\n    auth: authReducer,\n    protectedData: protectedDataReducer\n  }),\n  applyMiddleware(thunk)\n);\n\n// Hydrate the authToken from localStorage if it exist\nconst authToken = loadAuthToken();\nif (authToken) {\n  const token = authToken;\n  store.dispatch(setAuthToken(token));\n  store.dispatch(refreshAuthToken());\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport store from './store';\nimport './components/css/index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}