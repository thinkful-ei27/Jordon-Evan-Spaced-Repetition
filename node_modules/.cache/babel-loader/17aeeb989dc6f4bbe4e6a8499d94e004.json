{"ast":null,"code":"import _classCallCheck from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport Input from './input';\nimport { getWords } from '../actions/word-actions/getWords';\nimport { postGuess } from '../actions/word-actions/postGuess';\nimport requiresLogin from './requires-login';\n\nvar WordCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WordCard, _React$Component);\n\n  function WordCard() {\n    _classCallCheck(this, WordCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WordCard).apply(this, arguments));\n  }\n\n  _createClass(WordCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(getWords(this.props.words));\n    } // checkAnswer = value => {\n    //   return value.answerInput === this.props.words[0].answer;\n    // };\n    // checkAnswer = value => {\n    //   return this.props.words.find(word => value.answerInput === word.answer)\n    //     ? true\n    //     : false;\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          className: \"loading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"loading...\");\n      }\n\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          handleSubmit = _this$props.handleSubmit,\n          words = _this$props.words,\n          correctOrIncorrect = _this$props.correctOrIncorrect;\n      var renderRightOrWrong = correctOrIncorrect.rightOrWrong === 'correct' ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"\\xA1PERFECTO!\") : correctOrIncorrect.rightOrWrong === 'incorrect' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"quiz\\xE1s la pr\\xF3xima\", ' ', React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"accessible-emoji\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"\\uD83D\\uDE15\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"la respuesta es \".concat(correctOrIncorrect.answer))) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"\\xA1t\\xFA lo sabes!\");\n      var checkIfFirstTimeSeeing = words.incorrectCount === 0 && words.correctCount === 0 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"This is the first time you have seen this word\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"has conocido esta palabra \", React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"\".concat(words.correctCount)), \" veces\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"respondiste esta palabra incorrectamente\", ' ', React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"\".concat(words.incorrectCount)), \" veces\"));\n      return React.createElement(\"section\", {\n        className: \"word-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, words.word), React.createElement(\"form\", {\n        onSubmit: handleSubmit(function (value) {\n          return dispatch(postGuess(value));\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Field, {\n        autoComplete: \"on\",\n        name: \"guess\",\n        className: \"guess\",\n        component: Input,\n        type: \"text\",\n        placeholder: \"tu respuesta\",\n        ref: \"guess\",\n        validate: [required],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, checkIfFirstTimeSeeing), React.createElement(\"div\", {\n        className: \"word-buttons submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.props.submitSucceeded ? React.createElement(\"button\", {\n        type: \"click\",\n        onClick: function onClick(value) {\n          _this.props.reset('guess');\n\n          dispatch(getWords(words)).then(function () {\n            _this.props.untouch('guess');\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, ' ', \"proxima palabra\") : React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"env\\xEDa tu respuesta\"))), React.createElement(\"div\", {\n        className: \"feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, renderRightOrWrong));\n    } //onSubmit check if answer is correct and display feedback accordingly\n    // somehow switch button to go to the next question?\n\n  }]);\n\n  return WordCard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    words: state.words.words,\n    correctOrIncorrect: state.words.correctOrIncorrect,\n    loading: state.words.loading\n  };\n};\n\nWordCard = requiresLogin()(connect(mapStateToProps)(WordCard));\nexport default reduxForm({\n  form: 'submitAnswerForm',\n  initialValues: {\n    guess: ''\n  }\n})(WordCard);","map":{"version":3,"sources":["/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js"],"names":["React","Component","connect","Field","reduxForm","required","Input","getWords","postGuess","requiresLogin","WordCard","props","dispatch","words","loading","handleSubmit","correctOrIncorrect","renderRightOrWrong","rightOrWrong","answer","checkIfFirstTimeSeeing","incorrectCount","correctCount","word","value","submitSucceeded","reset","then","untouch","mapStateToProps","state","form","initialValues","guess"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\n\nimport Input from './input';\nimport { getWords } from '../actions/word-actions/getWords';\nimport { postGuess } from '../actions/word-actions/postGuess';\nimport requiresLogin from './requires-login';\n\nclass WordCard extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(getWords(this.props.words));\n  }\n\n  // checkAnswer = value => {\n  //   return value.answerInput === this.props.words[0].answer;\n  // };\n  // checkAnswer = value => {\n  //   return this.props.words.find(word => value.answerInput === word.answer)\n  //     ? true\n  //     : false;\n  // };\n  render() {\n    if (this.props.loading) {\n      return <div className=\"loading\">loading...</div>;\n    }\n    const { dispatch, handleSubmit, words, correctOrIncorrect } = this.props;\n    const renderRightOrWrong =\n      correctOrIncorrect.rightOrWrong === 'correct' ? (\n        <p>¡PERFECTO!</p>\n      ) : correctOrIncorrect.rightOrWrong === 'incorrect' ? (\n        <div>\n          <p>\n            quizás la próxima{' '}\n            <span role=\"img\" aria-label=\"accessible-emoji\">\n              😕\n            </span>\n          </p>\n          <p>{`la respuesta es ${correctOrIncorrect.answer}`}</p>\n        </div>\n      ) : (\n            <p>¡tú lo sabes!</p>\n          );\n\n    const checkIfFirstTimeSeeing =\n      words.incorrectCount === 0 && words.correctCount === 0 ? (\n        <p>This is the first time you have seen this word</p>\n      ) : (\n          <div>\n            <p>\n              has conocido esta palabra <u>{`${words.correctCount}`}</u> veces\n          </p>\n            <p>\n              respondiste esta palabra incorrectamente{' '}\n              <u>{`${words.incorrectCount}`}</u> veces\n          </p>\n          </div>\n        );\n\n    return (\n      <section className=\"word-card\">\n        <header>{words.word}</header>\n        <form\n          onSubmit={handleSubmit(value => {\n            return dispatch(postGuess(value));\n          })}\n        >\n          <div />\n          <Field\n            autoComplete=\"on\"\n            name=\"guess\"\n            className=\"guess\"\n            component={Input}\n            type=\"text\"\n            placeholder=\"tu respuesta\"\n            ref=\"guess\"\n            validate={[required]}\n          />\n          <div>{checkIfFirstTimeSeeing}</div>\n          <div className=\"word-buttons submit\">\n            {this.props.submitSucceeded ? (\n              <button\n                type=\"click\"\n                onClick={value => {\n                  this.props.reset('guess');\n                  dispatch(getWords(words)).then(() => {\n                    this.props.untouch('guess');\n                  });\n                }}\n              >\n                {' '}\n                proxima palabra\n              </button>\n            ) : (\n                <button type=\"submit\">envía tu respuesta</button>\n              )}\n          </div>\n        </form>\n        <div className=\"feedback\">{renderRightOrWrong}</div>\n      </section>\n    );\n  }\n  //onSubmit check if answer is correct and display feedback accordingly\n  // somehow switch button to go to the next question?\n}\n\nconst mapStateToProps = state => ({\n  words: state.words.words,\n  correctOrIncorrect: state.words.correctOrIncorrect,\n  loading: state.words.loading\n});\n\nWordCard = requiresLogin()(connect(mapStateToProps)(WordCard));\nexport default reduxForm({\n  form: 'submitAnswerForm',\n  initialValues: {\n    guess: ''\n  }\n})(WordCard);\n"]},"metadata":{},"sourceType":"module"}