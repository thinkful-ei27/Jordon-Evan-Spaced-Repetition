{"ast":null,"code":"import { API_BASE_URL } from '../../config';\nexport var GET_WORDS_REQUEST = 'GET_WORDS_REQUEST';\nexport var GET_WORDS_SUCCESS = 'GET_WORDS_SUCCESS';\nexport var GET_WORDS_ERROR = 'GET_WORDS_ERROR';\nexport var getWordsRequest = function getWordsRequest() {\n  return {\n    type: GET_WORDS_REQUEST\n  };\n};\nexport var getWordsSuccess = function getWordsSuccess(words) {\n  return {\n    type: GET_WORDS_SUCCESS,\n    words: words\n  };\n};\nexport var getWordsError = function getWordsError(err) {\n  return {\n    type: GET_WORDS_ERROR,\n    err: err\n  };\n};\nexport var getWords = function getWords(words) {\n  return function (dispatch, getState) {\n    var authToken = getState().auth.authToken;\n    dispatch(getWordsRequest());\n    return fetch(\"\".concat(API_BASE_URL, \"/words\"), {\n      method: 'GET',\n      headers: {\n        Authorization: \"Bearer \".concat(authToken),\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      console.log(res);\n      return res.json();\n    }).then(function (data) {\n      return dispatch(getWordsSuccess(data));\n    }).catch(function (err) {\n      return dispatch(getWordsError(err));\n    });\n  };\n};\nexport var SET_USER_INPUT = 'SET_USER_INPUT';\nexport var setUserInput = function setUserInput(userInput) {\n  return {\n    type: SET_USER_INPUT,\n    userInput: userInput\n  };\n};","map":{"version":3,"sources":["/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/actions/word-actions/getWords.js"],"names":["API_BASE_URL","GET_WORDS_REQUEST","GET_WORDS_SUCCESS","GET_WORDS_ERROR","getWordsRequest","type","getWordsSuccess","words","getWordsError","err","getWords","dispatch","getState","authToken","auth","fetch","method","headers","Authorization","then","res","ok","Promise","reject","statusText","console","log","json","data","catch","SET_USER_INPUT","setUserInput","userInput"],"mappings":"AAAA,SAASA,YAAT,QAA6B,cAA7B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AACpCC,IAAAA,IAAI,EAAEJ;AAD8B,GAAP;AAAA,CAAxB;AAGP,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AACvCF,IAAAA,IAAI,EAAEH,iBADiC;AAEvCK,IAAAA,KAAK,EAALA;AAFuC,GAAL;AAAA,CAA7B;AAIP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG;AAAA,SAAK;AACnCJ,IAAAA,IAAI,EAAEF,eAD6B;AAEnCM,IAAAA,GAAG,EAAHA;AAFmC,GAAL;AAAA,CAAzB;AAKP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAH,KAAK;AAAA,SAAI,UAACI,QAAD,EAAWC,QAAX,EAAwB;AACvD,QAAMC,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAlC;AACAF,IAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR;AAEA,WAAOW,KAAK,WAAIf,YAAJ,aAA0B;AACpCgB,MAAAA,MAAM,EAAE,KAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYL,SAAZ,CADN;AAEP,wBAAgB;AAFT;AAF2B,KAA1B,CAAL,CAOJM,IAPI,CAOC,UAAAC,GAAG,EAAI;AACX,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,eAAOC,OAAO,CAACC,MAAR,CAAeH,GAAG,CAACI,UAAnB,CAAP;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,aAAOA,GAAG,CAACO,IAAJ,EAAP;AACD,KAbI,EAcJR,IAdI,CAcC,UAAAS,IAAI,EAAI;AACZ,aAAOjB,QAAQ,CAACL,eAAe,CAACsB,IAAD,CAAhB,CAAf;AACD,KAhBI,EAiBJC,KAjBI,CAiBE,UAAApB,GAAG;AAAA,aAAIE,QAAQ,CAACH,aAAa,CAACC,GAAD,CAAd,CAAZ;AAAA,KAjBL,CAAP;AAkBD,GAtB4B;AAAA,CAAtB;AAwBP,OAAO,IAAMqB,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,SAAS;AAAA,SAAK;AACxC3B,IAAAA,IAAI,EAAEyB,cADkC;AAExCE,IAAAA,SAAS,EAATA;AAFwC,GAAL;AAAA,CAA9B","sourcesContent":["import { API_BASE_URL } from '../../config';\n\nexport const GET_WORDS_REQUEST = 'GET_WORDS_REQUEST';\nexport const GET_WORDS_SUCCESS = 'GET_WORDS_SUCCESS';\nexport const GET_WORDS_ERROR = 'GET_WORDS_ERROR';\nexport const getWordsRequest = () => ({\n  type: GET_WORDS_REQUEST\n});\nexport const getWordsSuccess = words => ({\n  type: GET_WORDS_SUCCESS,\n  words\n});\nexport const getWordsError = err => ({\n  type: GET_WORDS_ERROR,\n  err\n});\n\nexport const getWords = words => (dispatch, getState) => {\n  const authToken = getState().auth.authToken;\n  dispatch(getWordsRequest());\n\n  return fetch(`${API_BASE_URL}/words`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(res => {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n      console.log(res);\n      return res.json();\n    })\n    .then(data => {\n      return dispatch(getWordsSuccess(data));\n    })\n    .catch(err => dispatch(getWordsError(err)));\n};\n\nexport const SET_USER_INPUT = 'SET_USER_INPUT';\nexport const setUserInput = userInput => ({\n  type: SET_USER_INPUT,\n  userInput\n});\n"]},"metadata":{},"sourceType":"module"}