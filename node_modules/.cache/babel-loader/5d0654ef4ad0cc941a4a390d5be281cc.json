{"ast":null,"code":"var _jsxFileName = \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport { setUserInput } from '../actions/word-actions/getWords';\nimport Input from './input';\n\nfunction WordCard(props) {\n  var handleSubmit = props.handleSubmit;\n\n  var checkAnswer = function checkAnswer(value) {\n    return value.answerInput === props.words[0].answer ? props.userInput = true : props.userInput = false;\n  };\n\n  var renderRightOrWrong = props.userInput ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"\\xA1PERFECTO!\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"quiz\\xE1s la pr\\xF3xima vez\");\n  console.log(props); //onSubmit check if answer is correct and display feedback accordingly\n  // somehow switch button to go to the next question?\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.words[0].word), React.createElement(\"form\", {\n    onSubmit: handleSubmit(function (value) {\n      return props.dispatch(setUserInput(checkAnswer(value)));\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"answerInput\",\n    component: Input,\n    type: \"text\",\n    placeholder: \"tu respuesta\",\n    validate: [required],\n    value: props.userInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"env\\xEDa tu respuesta\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, renderRightOrWrong));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    words: state.words.words\n  };\n};\n\nWordCard = connect(mapStateToProps)(WordCard);\nexport default reduxForm({\n  form: 'submitAnswerForm'\n})(WordCard);","map":{"version":3,"sources":["/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js"],"names":["React","connect","Field","reduxForm","required","setUserInput","Input","WordCard","props","handleSubmit","checkAnswer","value","answerInput","words","answer","userInput","renderRightOrWrong","console","log","word","dispatch","mapStateToProps","state","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MACfC,YADe,GACED,KADF,CACfC,YADe;;AAGvB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,WAAOA,KAAK,CAACC,WAAN,KAAsBJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeC,MAArC,GACFN,KAAK,CAACO,SAAN,GAAkB,IADhB,GAEFP,KAAK,CAACO,SAAN,GAAkB,KAFvB;AAGD,GAJD;;AAKA,MAAMC,kBAAkB,GAAGR,KAAK,CAACO,SAAN,GACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADyB,GAGzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF;AAKAE,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAbuB,CAevB;AACA;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeM,IAAxB,CADF,EAEE;AACE,IAAA,QAAQ,EAAEV,YAAY,CAAC,UAAAE,KAAK,EAAI;AAC9B,aAAOH,KAAK,CAACY,QAAN,CAAef,YAAY,CAACK,WAAW,CAACC,KAAD,CAAZ,CAA3B,CAAP;AACD,KAFqB,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,SAAS,EAAEL,KAFb;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,QAAQ,EAAE,CAACF,QAAD,CALZ;AAME,IAAA,KAAK,EAAEI,KAAK,CAACO,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAdF,CAFF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,kBAAN,CAnBF,CADF;AAuBD;;AAED,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCT,IAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,CAAYA;AADa,GAAL;AAAA,CAA7B;;AAIAN,QAAQ,GAAGN,OAAO,CAACoB,eAAD,CAAP,CAAyBd,QAAzB,CAAX;AACA,eAAeJ,SAAS,CAAC;AACvBoB,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZhB,QAFY,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport { setUserInput } from '../actions/word-actions/getWords';\nimport Input from './input';\nfunction WordCard(props) {\n  const { handleSubmit } = props;\n\n  const checkAnswer = value => {\n    return value.answerInput === props.words[0].answer\n      ? (props.userInput = true)\n      : (props.userInput = false);\n  };\n  const renderRightOrWrong = props.userInput ? (\n    <p>¡PERFECTO!</p>\n  ) : (\n    <p>quizás la próxima vez</p>\n  );\n  console.log(props);\n\n  //onSubmit check if answer is correct and display feedback accordingly\n  // somehow switch button to go to the next question?\n  return (\n    <div>\n      <header>{props.words[0].word}</header>\n      <form\n        onSubmit={handleSubmit(value => {\n          return props.dispatch(setUserInput(checkAnswer(value)));\n        })}\n      >\n        <div />\n        <Field\n          name=\"answerInput\"\n          component={Input}\n          type=\"text\"\n          placeholder=\"tu respuesta\"\n          validate={[required]}\n          value={props.userInput}\n        />\n        <button type=\"submit\">envía tu respuesta</button>\n      </form>\n\n      <div>{renderRightOrWrong}</div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  words: state.words.words\n});\n\nWordCard = connect(mapStateToProps)(WordCard);\nexport default reduxForm({\n  form: 'submitAnswerForm'\n})(WordCard);\n"]},"metadata":{},"sourceType":"module"}