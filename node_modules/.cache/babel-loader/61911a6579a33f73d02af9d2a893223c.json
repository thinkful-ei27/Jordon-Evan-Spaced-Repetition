{"ast":null,"code":"var _jsxFileName = \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport { setUserInput } from '../actions/word-actions/getWords';\nimport Input from './input';\nimport requiresLogin from './requires-login';\n\nfunction WordCard(props) {\n  var handleSubmit = props.handleSubmit;\n\n  var checkAnswer = function checkAnswer(value) {\n    return value.answerInput === props.words[0].answer;\n  };\n\n  var renderRightOrWrong = props.userInput ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\xA1PERFECTO!\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"quiz\\xE1s la pr\\xF3xima vez\"); //onSubmit check if answer is correct and display feedback accordingly\n  // somehow switch button to go to the next question?\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.words[0].word), React.createElement(\"form\", {\n    onSubmit: handleSubmit(function (value) {\n      props.dispatch(setUserInput(checkAnswer(value)));\n      console.log(props.userInput);\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"answerInput\",\n    component: Input,\n    type: \"text\",\n    placeholder: \"tu respuesta\",\n    validate: [required],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"env\\xEDa tu respuesta\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.submitSucceeded ? renderRightOrWrong : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"t\\xFA lo sabes\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    words: state.words.words,\n    userInput: state.words.userInput\n  };\n};\n\nWordCard = requiresLogin()(connect(mapStateToProps)(WordCard));\nexport default reduxForm({\n  form: 'submitAnswerForm'\n})(WordCard);","map":{"version":3,"sources":["/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js"],"names":["React","connect","Field","reduxForm","required","setUserInput","Input","requiresLogin","WordCard","props","handleSubmit","checkAnswer","value","answerInput","words","answer","renderRightOrWrong","userInput","word","dispatch","console","log","submitSucceeded","mapStateToProps","state","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MACfC,YADe,GACED,KADF,CACfC,YADe;;AAEvB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,WAAOA,KAAK,CAACC,WAAN,KAAsBJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeC,MAA5C;AACD,GAFD;;AAGA,MAAMC,kBAAkB,GAAGP,KAAK,CAACQ,SAAN,GACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADyB,GAGzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,CALuB,CAWvB;AACA;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASR,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeI,IAAxB,CADF,EAEE;AACE,IAAA,QAAQ,EAAER,YAAY,CAAC,UAAAE,KAAK,EAAI;AAC9BH,MAAAA,KAAK,CAACU,QAAN,CAAed,YAAY,CAACM,WAAW,CAACC,KAAD,CAAZ,CAA3B;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACQ,SAAlB;AACD,KAHqB,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,SAAS,EAAEX,KAFb;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,QAAQ,EAAE,CAACF,QAAD,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAdF,CAFF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,KAAK,CAACa,eAAN,GAAwBN,kBAAxB,GAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADhD,CAnBF,CADF;AAyBD;;AAED,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCV,IAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYA,KADa;AAEhCG,IAAAA,SAAS,EAAEO,KAAK,CAACV,KAAN,CAAYG;AAFS,GAAL;AAAA,CAA7B;;AAKAT,QAAQ,GAAGD,aAAa,GAAGN,OAAO,CAACsB,eAAD,CAAP,CAAyBf,QAAzB,CAAH,CAAxB;AACA,eAAeL,SAAS,CAAC;AACvBsB,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZjB,QAFY,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport { setUserInput } from '../actions/word-actions/getWords';\nimport Input from './input';\nimport requiresLogin from './requires-login';\nfunction WordCard(props) {\n  const { handleSubmit } = props;\n  const checkAnswer = value => {\n    return value.answerInput === props.words[0].answer;\n  };\n  const renderRightOrWrong = props.userInput ? (\n    <p>¡PERFECTO!</p>\n  ) : (\n    <p>quizás la próxima vez</p>\n  );\n\n  //onSubmit check if answer is correct and display feedback accordingly\n  // somehow switch button to go to the next question?\n  return (\n    <div>\n      <header>{props.words[0].word}</header>\n      <form\n        onSubmit={handleSubmit(value => {\n          props.dispatch(setUserInput(checkAnswer(value)));\n          console.log(props.userInput);\n        })}\n      >\n        <div />\n        <Field\n          name=\"answerInput\"\n          component={Input}\n          type=\"text\"\n          placeholder=\"tu respuesta\"\n          validate={[required]}\n        />\n        <button type=\"submit\">envía tu respuesta</button>\n      </form>\n\n      <div>\n        {props.submitSucceeded ? renderRightOrWrong : <p>tú lo sabes</p>}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  words: state.words.words,\n  userInput: state.words.userInput\n});\n\nWordCard = requiresLogin()(connect(mapStateToProps)(WordCard));\nexport default reduxForm({\n  form: 'submitAnswerForm'\n})(WordCard);\n"]},"metadata":{},"sourceType":"module"}