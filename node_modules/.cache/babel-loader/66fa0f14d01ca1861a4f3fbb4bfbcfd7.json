{"ast":null,"code":"import _classCallCheck from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/client/src/components/app.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport HeaderBar from './header-bar';\nimport LandingPage from './landing-page';\nimport Dashboard from './dashboard';\nimport RegistrationPage from './registration-page';\nimport { refreshAuthToken } from '../actions/auth';\nexport var App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.loggedIn && this.props.loggedIn) {\n        // When we are logged in, refresh the auth token periodically\n        this.startPeriodicRefresh();\n      } else if (prevProps.loggedIn && !this.props.loggedIn) {\n        // Stop refreshing when we log out\n        this.stopPeriodicRefresh();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stopPeriodicRefresh();\n    }\n  }, {\n    key: \"startPeriodicRefresh\",\n    value: function startPeriodicRefresh() {\n      var _this = this;\n\n      this.refreshInterval = setInterval(function () {\n        return _this.props.dispatch(refreshAuthToken());\n      }, 60 * 60 * 1000 // One hour\n      );\n    }\n  }, {\n    key: \"stopPeriodicRefresh\",\n    value: function stopPeriodicRefresh() {\n      if (!this.refreshInterval) {\n        return;\n      }\n\n      clearInterval(this.refreshInterval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(HeaderBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard\",\n        component: Dashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/register\",\n        component: RegistrationPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    hasAuthToken: state.auth.authToken !== null,\n    loggedIn: state.auth.currentUser !== null\n  };\n}; // Deal with update blocking - https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\n\n\nexport default withRouter(connect(mapStateToProps)(App));","map":{"version":3,"sources":["/Users/jordanheffernan/projects/portfolioProjects/Jordon-Evan-Spaced-Repetition/client/src/components/app.js"],"names":["React","connect","Route","withRouter","HeaderBar","LandingPage","Dashboard","RegistrationPage","refreshAuthToken","App","prevProps","loggedIn","props","startPeriodicRefresh","stopPeriodicRefresh","refreshInterval","setInterval","dispatch","clearInterval","Component","mapStateToProps","state","hasAuthToken","auth","authToken","currentUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,kBAAhC;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAAQC,gBAAR,QAA+B,iBAA/B;AAEA,WAAaC,GAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,uCACuBC,SADvB,EACkC;AAC1B,UAAI,CAACA,SAAS,CAACC,QAAX,IAAuB,KAAKC,KAAL,CAAWD,QAAtC,EAAgD;AAC5C;AACA,aAAKE,oBAAL;AACH,OAHD,MAGO,IAAIH,SAAS,CAACC,QAAV,IAAsB,CAAC,KAAKC,KAAL,CAAWD,QAAtC,EAAgD;AACnD;AACA,aAAKG,mBAAL;AACH;AACJ;AATL;AAAA;AAAA,2CAW2B;AACnB,WAAKA,mBAAL;AACH;AAbL;AAAA;AAAA,2CAe2B;AAAA;;AACnB,WAAKC,eAAL,GAAuBC,WAAW,CAC9B;AAAA,eAAM,KAAI,CAACJ,KAAL,CAAWK,QAAX,CAAoBT,gBAAgB,EAApC,CAAN;AAAA,OAD8B,EAE9B,KAAK,EAAL,GAAU,IAFoB,CAEf;AAFe,OAAlC;AAIH;AApBL;AAAA;AAAA,0CAsB0B;AAClB,UAAI,CAAC,KAAKO,eAAV,EAA2B;AACvB;AACH;;AAEDG,MAAAA,aAAa,CAAC,KAAKH,eAAN,CAAb;AACH;AA5BL;AAAA;AAAA,6BA8Ba;AACL,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEV,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,YAAlB;AAA+B,QAAA,SAAS,EAAEC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAA8B,QAAA,SAAS,EAAEC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAQH;AAvCL;;AAAA;AAAA,EAAyBP,KAAK,CAACmB,SAA/B;;AA0CA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWC,SAAX,KAAyB,IADT;AAE9Bb,IAAAA,QAAQ,EAAEU,KAAK,CAACE,IAAN,CAAWE,WAAX,KAA2B;AAFP,GAAL;AAAA,CAA7B,C,CAKA;;;AACA,eAAetB,UAAU,CAACF,OAAO,CAACmB,eAAD,CAAP,CAAyBX,GAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Route, withRouter} from 'react-router-dom';\n\nimport HeaderBar from './header-bar';\nimport LandingPage from './landing-page';\nimport Dashboard from './dashboard';\nimport RegistrationPage from './registration-page';\nimport {refreshAuthToken} from '../actions/auth';\n\nexport class App extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.loggedIn && this.props.loggedIn) {\n            // When we are logged in, refresh the auth token periodically\n            this.startPeriodicRefresh();\n        } else if (prevProps.loggedIn && !this.props.loggedIn) {\n            // Stop refreshing when we log out\n            this.stopPeriodicRefresh();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopPeriodicRefresh();\n    }\n\n    startPeriodicRefresh() {\n        this.refreshInterval = setInterval(\n            () => this.props.dispatch(refreshAuthToken()),\n            60 * 60 * 1000 // One hour\n        );\n    }\n\n    stopPeriodicRefresh() {\n        if (!this.refreshInterval) {\n            return;\n        }\n\n        clearInterval(this.refreshInterval);\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <HeaderBar />\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route exact path=\"/dashboard\" component={Dashboard} />\n                <Route exact path=\"/register\" component={RegistrationPage} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    hasAuthToken: state.auth.authToken !== null,\n    loggedIn: state.auth.currentUser !== null\n});\n\n// Deal with update blocking - https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\nexport default withRouter(connect(mapStateToProps)(App));\n"]},"metadata":{},"sourceType":"module"}