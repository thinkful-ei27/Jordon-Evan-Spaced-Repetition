{"ast":null,"code":"export var required = function required(value) {\n  return value ? undefined : 'Required';\n};\nexport var nonEmpty = function nonEmpty(value) {\n  return value.trim() !== '' ? undefined : 'Cannot be empty';\n};\nexport var isTrimmed = function isTrimmed(value) {\n  return value.trim() === value ? undefined : 'Cannot start or end with whitespace';\n};\nexport var length = function length(_length) {\n  return function (value) {\n    if (_length.min && value.length < _length.min) {\n      return \"Must be at least \".concat(_length.min, \" characters long\");\n    }\n\n    if (_length.max && value.length > _length.max) {\n      return \"Must be at most \".concat(_length.max, \" characters long\");\n    }\n  };\n};\nexport var matches = function matches(field) {\n  return function (value, allValues) {\n    return field in allValues && value.trim() === allValues[field].trim() ? undefined : 'Does not match';\n  };\n};","map":{"version":3,"sources":["/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/validators.js"],"names":["required","value","undefined","nonEmpty","trim","isTrimmed","length","min","max","matches","field","allValues"],"mappings":"AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAKA,KAAK,GAAGC,SAAH,GAAe,UAAzB;AAAA,CAAtB;AACP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAF,KAAK;AAAA,SAC3BA,KAAK,CAACG,IAAN,OAAiB,EAAjB,GAAsBF,SAAtB,GAAkC,iBADP;AAAA,CAAtB;AAEP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAAJ,KAAK;AAAA,SAC5BA,KAAK,CAACG,IAAN,OAAiBH,KAAjB,GAAyBC,SAAzB,GAAqC,qCADT;AAAA,CAAvB;AAEP,OAAO,IAAMI,MAAM,GAAG,gBAAAA,OAAM;AAAA,SAAI,UAAAL,KAAK,EAAI;AACvC,QAAIK,OAAM,CAACC,GAAP,IAAcN,KAAK,CAACK,MAAN,GAAeA,OAAM,CAACC,GAAxC,EAA6C;AAC3C,wCAA2BD,OAAM,CAACC,GAAlC;AACD;;AACD,QAAID,OAAM,CAACE,GAAP,IAAcP,KAAK,CAACK,MAAN,GAAeA,OAAM,CAACE,GAAxC,EAA6C;AAC3C,uCAA0BF,OAAM,CAACE,GAAjC;AACD;AACF,GAP2B;AAAA,CAArB;AAQP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SAAI,UAACT,KAAD,EAAQU,SAAR;AAAA,WAC9BD,KAAK,IAAIC,SAAT,IAAsBV,KAAK,CAACG,IAAN,OAAiBO,SAAS,CAACD,KAAD,CAAT,CAAiBN,IAAjB,EAAvC,GACIF,SADJ,GAEI,gBAH0B;AAAA,GAAJ;AAAA,CAArB","sourcesContent":["export const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n  value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n  value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n  if (length.min && value.length < length.min) {\n    return `Must be at least ${length.min} characters long`;\n  }\n  if (length.max && value.length > length.max) {\n    return `Must be at most ${length.max} characters long`;\n  }\n};\nexport const matches = field => (value, allValues) =>\n  field in allValues && value.trim() === allValues[field].trim()\n    ? undefined\n    : 'Does not match';\n"]},"metadata":{},"sourceType":"module"}