{"ast":null,"code":"import _objectSpread from \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SET_USER_INPUT, GET_WORDS_ERROR, GET_WORDS_REQUEST, GET_WORDS_SUCCESS } from '../actions/word-actions/getWords';\nimport { POST_GUESS_ERROR, POST_GUESS_REQUEST, POST_GUESS_SUCCESS } from '../actions/word-actions/postGuess';\nvar initialState = {\n  words: [],\n  correctOrIncorrect: null,\n  error: null,\n  loading: false\n};\nexport default function wordReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === SET_USER_INPUT) {\n    return _objectSpread({}, state, {\n      userInput: action.userInput\n    });\n  } else if (action.type === GET_WORDS_REQUEST) {\n    return _objectSpread({}, state, {\n      loading: true,\n      error: null\n    });\n  } else if (action.type === GET_WORDS_SUCCESS) {\n    return _objectSpread({}, state, {\n      loading: false,\n      words: action.words,\n      correctOrIncorrect: null\n    });\n  } else if (action.type === GET_WORDS_ERROR) {\n    return _objectSpread({}, state, {\n      error: action.err\n    });\n  } else if (action.type === POST_GUESS_REQUEST) {\n    return _objectSpread({}, state, {\n      loading: true,\n      error: null\n    });\n  } else if (action.type === POST_GUESS_SUCCESS) {\n    return _objectSpread({}, state, {\n      loading: false,\n      correctOrIncorrect: action.correctOrIncorrect\n    });\n  } else if (action.type === POST_GUESS_ERROR) {\n    return _objectSpread({}, state, {\n      loading: false,\n      error: action.err\n    });\n  }\n\n  return state;\n} //maybe set words to an object?\n// initialState = {\n//   words: [{word:'hola',answer: 'hello'}, {word:'gracias',answer: 'thank you'}]\n// }\n// {\n//   Words:  { word: 'hola', answer: 'hello', correctCount: 0, incorrectCount: 0, next: null}\n// }","map":{"version":3,"sources":["/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/reducers/words.js"],"names":["SET_USER_INPUT","GET_WORDS_ERROR","GET_WORDS_REQUEST","GET_WORDS_SUCCESS","POST_GUESS_ERROR","POST_GUESS_REQUEST","POST_GUESS_SUCCESS","initialState","words","correctOrIncorrect","error","loading","wordReducer","state","action","type","userInput","err"],"mappings":";AAAA,SACEA,cADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,iBAJF,QAKO,kCALP;AAOA,SACEC,gBADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,mCAJP;AAKA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,kBAAkB,EAAE,IAFD;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;AAOA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBN,YAAsB;AAAA,MAARO,MAAQ;;AAChE,MAAIA,MAAM,CAACC,IAAP,KAAgBf,cAApB,EAAoC;AAClC,6BACKa,KADL;AAEEG,MAAAA,SAAS,EAAEF,MAAM,CAACE;AAFpB;AAID,GALD,MAKO,IAAIF,MAAM,CAACC,IAAP,KAAgBb,iBAApB,EAAuC;AAC5C,6BACKW,KADL;AAEEF,MAAAA,OAAO,EAAE,IAFX;AAGED,MAAAA,KAAK,EAAE;AAHT;AAKD,GANM,MAMA,IAAII,MAAM,CAACC,IAAP,KAAgBZ,iBAApB,EAAuC;AAC5C,6BACKU,KADL;AAEEF,MAAAA,OAAO,EAAE,KAFX;AAGEH,MAAAA,KAAK,EAAEM,MAAM,CAACN,KAHhB;AAIEC,MAAAA,kBAAkB,EAAE;AAJtB;AAMD,GAPM,MAOA,IAAIK,MAAM,CAACC,IAAP,KAAgBd,eAApB,EAAqC;AAC1C,6BACKY,KADL;AAEEH,MAAAA,KAAK,EAAEI,MAAM,CAACG;AAFhB;AAID,GALM,MAKA,IAAIH,MAAM,CAACC,IAAP,KAAgBV,kBAApB,EAAwC;AAC7C,6BACKQ,KADL;AAEEF,MAAAA,OAAO,EAAE,IAFX;AAGED,MAAAA,KAAK,EAAE;AAHT;AAKD,GANM,MAMA,IAAII,MAAM,CAACC,IAAP,KAAgBT,kBAApB,EAAwC;AAC7C,6BACKO,KADL;AAEEF,MAAAA,OAAO,EAAE,KAFX;AAGEF,MAAAA,kBAAkB,EAAEK,MAAM,CAACL;AAH7B;AAKD,GANM,MAMA,IAAIK,MAAM,CAACC,IAAP,KAAgBX,gBAApB,EAAsC;AAC3C,6BACKS,KADL;AAEEF,MAAAA,OAAO,EAAE,KAFX;AAGED,MAAAA,KAAK,EAAEI,MAAM,CAACG;AAHhB;AAKD;;AACD,SAAOJ,KAAP;AACD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import {\n  SET_USER_INPUT,\n  GET_WORDS_ERROR,\n  GET_WORDS_REQUEST,\n  GET_WORDS_SUCCESS\n} from '../actions/word-actions/getWords';\n\nimport {\n  POST_GUESS_ERROR,\n  POST_GUESS_REQUEST,\n  POST_GUESS_SUCCESS\n} from '../actions/word-actions/postGuess';\nconst initialState = {\n  words: [],\n  correctOrIncorrect: null,\n  error: null,\n  loading: false\n};\n\nexport default function wordReducer(state = initialState, action) {\n  if (action.type === SET_USER_INPUT) {\n    return {\n      ...state,\n      userInput: action.userInput\n    };\n  } else if (action.type === GET_WORDS_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n      error: null\n    };\n  } else if (action.type === GET_WORDS_SUCCESS) {\n    return {\n      ...state,\n      loading: false,\n      words: action.words,\n      correctOrIncorrect: null\n    };\n  } else if (action.type === GET_WORDS_ERROR) {\n    return {\n      ...state,\n      error: action.err\n    };\n  } else if (action.type === POST_GUESS_REQUEST) {\n    return {\n      ...state,\n      loading: true,\n      error: null\n    };\n  } else if (action.type === POST_GUESS_SUCCESS) {\n    return {\n      ...state,\n      loading: false,\n      correctOrIncorrect: action.correctOrIncorrect\n    };\n  } else if (action.type === POST_GUESS_ERROR) {\n    return {\n      ...state,\n      loading: false,\n      error: action.err\n    };\n  }\n  return state;\n}\n\n//maybe set words to an object?\n// initialState = {\n//   words: [{word:'hola',answer: 'hello'}, {word:'gracias',answer: 'thank you'}]\n// }\n\n// {\n//   Words:  { word: 'hola', answer: 'hello', correctCount: 0, incorrectCount: 0, next: null}\n// }\n"]},"metadata":{},"sourceType":"module"}