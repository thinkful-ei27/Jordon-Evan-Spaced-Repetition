{"ast":null,"code":"var _jsxFileName = \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport Input from './input';\n\nfunction WordCard(props) {\n  var handleSubmit = props.handleSubmit;\n\n  var checkAnswer = function checkAnswer(value) {\n    return value.answerInput === props.words[0].answer;\n  }; //onSubmit check if answer is correct and display feedback accordingly\n  // somehow switch button to go to the next question?\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.words[0].word), React.createElement(\"form\", {\n    onSubmit: handleSubmit(function (value) {\n      checkAnswer(value);\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"answerInput\",\n    component: Input,\n    type: \"text\",\n    placeholder: \"tu respuesta\",\n    validate: [required],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"env\\xEDa tu respuesta\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    words: state.words.words\n  };\n};\n\nWordCard = connect(mapStateToProps)(WordCard);\nexport default reduxForm({\n  form: 'submitAnswerForm'\n})(WordCard);","map":{"version":3,"sources":["/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js"],"names":["React","connect","Field","reduxForm","required","Input","WordCard","props","handleSubmit","checkAnswer","value","answerInput","words","answer","word","mapStateToProps","state","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,MACfC,YADe,GACED,KADF,CACfC,YADe;;AAGvB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,WAAOA,KAAK,CAACC,WAAN,KAAsBJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeC,MAA5C;AACD,GAFD,CAHuB,CAOvB;AACA;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeE,IAAxB,CADF,EAEE;AACE,IAAA,QAAQ,EAAEN,YAAY,CAAC,UAAAE,KAAK,EAAI;AAC9BD,MAAAA,WAAW,CAACC,KAAD,CAAX;AACD,KAFqB,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,SAAS,EAAEL,KAFb;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,cAJd;AAKE,IAAA,QAAQ,EAAE,CAACD,QAAD,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAZF,CAFF,CADF;AAmBD;;AAED,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYA;AADa,GAAL;AAAA,CAA7B;;AAIAN,QAAQ,GAAGL,OAAO,CAACc,eAAD,CAAP,CAAyBT,QAAzB,CAAX;AACA,eAAeH,SAAS,CAAC;AACvBc,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZX,QAFY,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport Input from './input';\nfunction WordCard(props) {\n  const { handleSubmit } = props;\n\n  const checkAnswer = value => {\n    return value.answerInput === props.words[0].answer;\n  };\n\n  //onSubmit check if answer is correct and display feedback accordingly\n  // somehow switch button to go to the next question?\n  return (\n    <div>\n      <header>{props.words[0].word}</header>\n      <form\n        onSubmit={handleSubmit(value => {\n          checkAnswer(value);\n        })}\n      >\n        <Field\n          name=\"answerInput\"\n          component={Input}\n          type=\"text\"\n          placeholder=\"tu respuesta\"\n          validate={[required]}\n        />\n        <button type=\"submit\">env√≠a tu respuesta</button>\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  words: state.words.words\n});\n\nWordCard = connect(mapStateToProps)(WordCard);\nexport default reduxForm({\n  form: 'submitAnswerForm'\n})(WordCard);\n"]},"metadata":{},"sourceType":"module"}