{"ast":null,"code":"import _classCallCheck from \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport { setUserInput } from '../actions/word-actions/getWords';\nimport Input from './input';\nimport { getWords } from '../actions/word-actions/getWords';\nimport requiresLogin from './requires-login';\n\nvar WordCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WordCard, _Component);\n\n  function WordCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WordCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WordCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.checkAnswer = function (value) {\n      return _this.props.words.find(function (word) {\n        return value.answerInput === word.answer;\n      }) ? true : false;\n    };\n\n    return _this;\n  }\n\n  _createClass(WordCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(getWords(this.props.words));\n    } // checkAnswer = value => {\n    //   return value.answerInput === this.props.words[0].answer;\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          handleSubmit = _this$props.handleSubmit,\n          words = _this$props.words;\n      var spanish = words.map(function (word) {\n        console.log(word);\n        return word.word;\n      });\n      var renderRightOrWrong = this.props.userInput ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"\\xA1PERFECTO!\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"quiz\\xE1s la pr\\xF3xima vez\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, spanish[words.head]), React.createElement(\"form\", {\n        onSubmit: handleSubmit(function (value) {\n          dispatch(setUserInput(_this2.checkAnswer(value)));\n          console.log(_this2.props.userInput);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"answerInput\",\n        component: Input,\n        type: \"text\",\n        placeholder: \"tu respuesta\",\n        validate: [required],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"env\\xEDa tu respuesta\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.props.submitSucceeded ? renderRightOrWrong : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"t\\xFA lo sabes\")));\n    } //onSubmit check if answer is correct and display feedback accordingly\n    // somehow switch button to go to the next question?\n\n  }]);\n\n  return WordCard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    words: state.words.words,\n    userInput: state.words.userInput\n  };\n};\n\nWordCard = requiresLogin()(connect(mapStateToProps)(WordCard));\nexport default reduxForm({\n  form: 'submitAnswerForm'\n})(WordCard);","map":{"version":3,"sources":["/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/components/WordCard.js"],"names":["React","Component","connect","Field","reduxForm","required","setUserInput","Input","getWords","requiresLogin","WordCard","checkAnswer","value","props","words","find","word","answerInput","answer","dispatch","handleSubmit","spanish","map","console","log","renderRightOrWrong","userInput","head","submitSucceeded","mapStateToProps","state","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../validators';\nimport { setUserInput } from '../actions/word-actions/getWords';\nimport Input from './input';\nimport { getWords } from '../actions/word-actions/getWords';\nimport requiresLogin from './requires-login';\nclass WordCard extends Component {\n  componentDidMount() {\n    this.props.dispatch(getWords(this.props.words));\n  }\n\n  // checkAnswer = value => {\n  //   return value.answerInput === this.props.words[0].answer;\n  // };\n  checkAnswer = value => {\n    return this.props.words.find(word => value.answerInput === word.answer)\n      ? true\n      : false;\n  };\n  render() {\n    const { dispatch, handleSubmit, words } = this.props;\n\n    const spanish = words.map(word => {\n      console.log(word);\n      return word.word;\n    });\n\n    const renderRightOrWrong = this.props.userInput ? (\n      <p>¡PERFECTO!</p>\n    ) : (\n      <p>quizás la próxima vez</p>\n    );\n\n    return (\n      <div>\n        <header>{spanish[words.head]}</header>\n        <form\n          onSubmit={handleSubmit(value => {\n            dispatch(setUserInput(this.checkAnswer(value)));\n            console.log(this.props.userInput);\n          })}\n        >\n          <div />\n          <Field\n            name=\"answerInput\"\n            component={Input}\n            type=\"text\"\n            placeholder=\"tu respuesta\"\n            validate={[required]}\n          />\n          <button type=\"submit\">envía tu respuesta</button>\n        </form>\n\n        <div>\n          {this.props.submitSucceeded ? renderRightOrWrong : <p>tú lo sabes</p>}\n        </div>\n      </div>\n    );\n  }\n  //onSubmit check if answer is correct and display feedback accordingly\n  // somehow switch button to go to the next question?\n}\n\nconst mapStateToProps = state => ({\n  words: state.words.words,\n  userInput: state.words.userInput\n});\n\nWordCard = requiresLogin()(connect(mapStateToProps)(WordCard));\nexport default reduxForm({\n  form: 'submitAnswerForm'\n})(WordCard);\n"]},"metadata":{},"sourceType":"module"}