{"ast":null,"code":"import { API_BASE_URL } from '../../config';\nexport var POST_GUESS_REQUEST = 'POST_GUESS_REQUEST';\nexport var postGuessRequest = function postGuessRequest() {\n  return {\n    type: POST_GUESS_REQUEST\n  };\n};\nexport var POST_GUESS_SUCCESS = 'POST_GUESS_SUCCESS';\nexport var postGuessSuccess = function postGuessSuccess(correctOrIncorrect) {\n  return {\n    type: POST_GUESS_SUCCESS,\n    correctOrIncorrect: correctOrIncorrect\n  };\n};\nexport var POST_GUESS_ERROR = 'POST_GUESS_ERROR';\nexport var postGuessError = function postGuessError(err) {\n  return {\n    type: POST_GUESS_ERROR,\n    err: err\n  };\n};\nexport var postGuess = function postGuess(guess) {\n  return function (dispatch, getState) {\n    var authToken = getState().auth.authToken;\n    var newGuess = {\n      guess: guess\n    };\n    dispatch(postGuessRequest());\n    fetch(\"\".concat(API_BASE_URL, \"/words/guess\"), {\n      method: 'POST',\n      body: JSON.stringify(newGuess),\n      headers: {\n        Authorization: \"Bearer \".concat(authToken),\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      return res.json();\n    }).then(function (newGuess) {\n      return dispatch(postGuessSuccess(newGuess));\n    }).catch(function (err) {\n      return dispatch(postGuessError(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/evanguirino/thinkful/spaced-repetition-client/Jordon-Evan-Spaced-Repetition/src/actions/word-actions/postGuess.js"],"names":["API_BASE_URL","POST_GUESS_REQUEST","postGuessRequest","type","POST_GUESS_SUCCESS","postGuessSuccess","correctOrIncorrect","POST_GUESS_ERROR","postGuessError","err","postGuess","guess","dispatch","getState","authToken","auth","newGuess","fetch","method","body","JSON","stringify","headers","Authorization","then","res","ok","Promise","reject","statusText","json","catch"],"mappings":"AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACrCC,IAAAA,IAAI,EAAEF;AAD+B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMG,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,kBAAkB;AAAA,SAAK;AACrDH,IAAAA,IAAI,EAAEC,kBAD+C;AAErDE,IAAAA,kBAAkB,EAAlBA;AAFqD,GAAL;AAAA,CAA3C;AAKP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG;AAAA,SAAK;AACpCN,IAAAA,IAAI,EAAEI,gBAD8B;AAEpCE,IAAAA,GAAG,EAAHA;AAFoC,GAAL;AAAA,CAA1B;AAKP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SAAI,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACxD,QAAMC,SAAS,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAlC;AACA,QAAME,QAAQ,GAAG;AACfL,MAAAA,KAAK,EAALA;AADe,KAAjB;AAGAC,IAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACAe,IAAAA,KAAK,WAAIjB,YAAJ,mBAAgC;AACnCkB,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAF6B;AAGnCM,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYT,SAAZ,CADN;AAEP,wBAAgB;AAFT;AAH0B,KAAhC,CAAL,CAQGU,IARH,CAQQ,UAAAC,GAAG,EAAI;AACX,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,eAAOC,OAAO,CAACC,MAAR,CAAeH,GAAG,CAACI,UAAnB,CAAP;AACD;;AACD,aAAOJ,GAAG,CAACK,IAAJ,EAAP;AACD,KAbH,EAcGN,IAdH,CAcQ,UAAAR,QAAQ,EAAI;AAChB,aAAOJ,QAAQ,CAACP,gBAAgB,CAACW,QAAD,CAAjB,CAAf;AACD,KAhBH,EAiBGe,KAjBH,CAiBS,UAAAtB,GAAG;AAAA,aAAIG,QAAQ,CAACJ,cAAc,CAACC,GAAD,CAAf,CAAZ;AAAA,KAjBZ;AAkBD,GAxB6B;AAAA,CAAvB","sourcesContent":["import { API_BASE_URL } from '../../config';\nexport const POST_GUESS_REQUEST = 'POST_GUESS_REQUEST';\nexport const postGuessRequest = () => ({\n  type: POST_GUESS_REQUEST\n});\n\nexport const POST_GUESS_SUCCESS = 'POST_GUESS_SUCCESS';\nexport const postGuessSuccess = correctOrIncorrect => ({\n  type: POST_GUESS_SUCCESS,\n  correctOrIncorrect\n});\n\nexport const POST_GUESS_ERROR = 'POST_GUESS_ERROR';\nexport const postGuessError = err => ({\n  type: POST_GUESS_ERROR,\n  err\n});\n\nexport const postGuess = guess => (dispatch, getState) => {\n  const authToken = getState().auth.authToken;\n  const newGuess = {\n    guess\n  };\n  dispatch(postGuessRequest());\n  fetch(`${API_BASE_URL}/words/guess`, {\n    method: 'POST',\n    body: JSON.stringify(newGuess),\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(res => {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n      return res.json();\n    })\n    .then(newGuess => {\n      return dispatch(postGuessSuccess(newGuess));\n    })\n    .catch(err => dispatch(postGuessError(err)));\n};\n"]},"metadata":{},"sourceType":"module"}